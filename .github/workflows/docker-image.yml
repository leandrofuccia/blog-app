name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Verificar versão do Docker
        run: docker --version

      - name: Baixar Docker Compose v2
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -SL https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Verificar instalação do Docker Compose v2
        run: docker compose version

      - name: Configurar variáveis de ambiente
        env:
          PORT: 3002
          NODE_ENV: test
          DATABASE_USER: blogdb
          DATABASE_HOST: localhost
          DATABASE_NAME: blogdb
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_PORT: 5432
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: echo "variáveis de ambiente configuradas!"

      - name: Criar variável de timestamp
        run: echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV

      - name: Excluir cache e node_modules
        run: |
          rm -rf node_modules package-lock.json

      - name: Instalar dependências
        run: npm install --legacy-peer-deps

      - name: Executar testes
        run: npm test

      - name: Build da imagem Docker
        run: docker compose up --build -d

      - name: Login no Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push da imagem para o Docker Hub
        run: docker push leandrofuccia/blog-app:${{ env.TIMESTAMP }}

      - name: Rodar o container para teste
        run: docker run -d -p 3002:3002 --name blog-app leandrofuccia/blog-app:${{ env.TIMESTAMP }}

      - name: Encerra os containers do docker compose
        if: always()
        run: docker compose down
